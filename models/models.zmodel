enum UserStatus {
    INVITED
    VERIFIED
}

model User {
    id              String           @id @default(uuid())
    name            String?
    email           String?          @unique
    pictureUrl      String?          @default('https://i.imgur.com/ZdJSK3Y.jpeg')
    tokenInvitation String?

    status          UserStatus       @default(VERIFIED)

    // this is the role of the user for the application
    globalRole      String           @default('USER')
    password        String?          @password @omit
    createdAt       DateTime         @default(now())
    updatedAt       DateTime         @updatedAt @default(now())

    teamMembers     TeamMember[]     @relation("user")
    representatives Representative[] @relation("user")

    @@auth()
    @@allow("all", auth().id == this.id)
    @@allow('all', auth().globalRole == 'ADMIN')

    //we only allow that user to register if they don't create an admin role
    @@allow("create", globalRole != 'ADMIN')
    @@allow("read", true)
}

model Department {

    id              String           @id @default(uuid())
    name            String
    description     String?

    representatives Representative[] @relation("department")
    jobs            Job[]            @relation("department")
    worksheets      Worksheet[]      @relation("department")
    stocks          Stock[]          @relation("department")
    createdAt       DateTime         @default(now())
    updatedAt       DateTime         @updatedAt @default(now())
    @@allow("all", true)
}

model Client {

    id             String   @id @default(uuid())
    name           String
    surname        String?
    email          String
    phone          String?
    streetAddress  String?
    city           String?
    suburb         String?
    state          String?
    companyName    String?
    companyPhone   String?
    companyAddress String?

    jobs           Job[]    @relation("client")
    createdAt      DateTime @default(now())
    updatedAt      DateTime @updatedAt @default(now())
    @@allow("all", true)
}

model InstallationTeam {

    id          String       @id @default(uuid())
    name        String
    description String?

    teamMembers TeamMember[] @relation("installationTeam")
    createdAt   DateTime     @default(now())
    updatedAt   DateTime     @updatedAt @default(now())
    @@allow("all", true)
}

model TeamMember {

    id                 String            @id @default(uuid())
    role               String

    userId             String
    user               User?             @relation(fields: [userId], references: [id], name: "user")
    installationTeamId String
    installationTeam   InstallationTeam? @relation(fields: [installationTeamId], references: [id], name: "installationTeam")

    schedules          Schedule[]        @relation("teamMember")
    createdAt          DateTime          @default(now())
    updatedAt          DateTime          @updatedAt @default(now())
    @@allow("all", true)
}

model Representative {

    id           String      @id @default(uuid())
    role         String

    userId       String
    user         User?       @relation(fields: [userId], references: [id], name: "user")
    departmentId String
    department   Department? @relation(fields: [departmentId], references: [id], name: "department")

    jobs         Job[]       @relation("representative")
    createdAt    DateTime    @default(now())
    updatedAt    DateTime    @updatedAt @default(now())
    @@allow("all", true)
}

model Job {

    id                   String          @id @default(uuid())
    status               String
    title                String
    description          String?
    materialRequirements String?

    clientId             String
    client               Client?         @relation(fields: [clientId], references: [id], name: "client")
    departmentId         String
    department           Department?     @relation(fields: [departmentId], references: [id], name: "department")
    representativeId     String?
    representative       Representative? @relation(fields: [representativeId], references: [id], name: "representative")

    worksheets           Worksheet[]     @relation("job")
    schedules            Schedule[]      @relation("job")
    createdAt            DateTime        @default(now())
    updatedAt            DateTime        @updatedAt @default(now())
    @@allow("all", true)
}

model Worksheet {

    id           String      @id @default(uuid())
    title        String
    fileUrl      String?
    fileType     String?
    status       String

    jobId        String
    job          Job?        @relation(fields: [jobId], references: [id], name: "job")
    departmentId String
    department   Department? @relation(fields: [departmentId], references: [id], name: "department")

    createdAt    DateTime    @default(now())
    updatedAt    DateTime    @updatedAt @default(now())
    @@allow("all", true)
}

model Stock {

    id           String      @id @default(uuid())
    name         String
    quantity     String
    unit         String
    minimumLevel String?
    supplier     String?

    departmentId String
    department   Department? @relation(fields: [departmentId], references: [id], name: "department")

    createdAt    DateTime    @default(now())
    updatedAt    DateTime    @updatedAt @default(now())
    @@allow("all", true)
}

model Schedule {

    id           String      @id @default(uuid())
    startDate    String
    endDate      String
    status       String

    jobId        String
    job          Job?        @relation(fields: [jobId], references: [id], name: "job")
    teamMemberId String
    teamMember   TeamMember? @relation(fields: [teamMemberId], references: [id], name: "teamMember")

    createdAt    DateTime    @default(now())
    updatedAt    DateTime    @updatedAt @default(now())
    @@allow("all", true)
}

    